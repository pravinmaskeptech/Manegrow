@model Micraft.ManeGrowAgro.Models.PincodeMasters

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-lg-2 col-md-2 col-12">
                <h5 class="text-dark mr-2"><b>Pincode Master</b></h5>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <h4>Pincode Masters</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.ID)

                                <div class="row">
                                    <div class="col-md-4 col-12 mb-3">
                                        @Html.LabelFor(model => model.Pincode, htmlAttributes: new { })
                                        @Html.EditorFor(model => model.Pincode, new { @type = "number", htmlAttributes = new { @class = "form-control", Autocomplete = "off", data_bv_notempty = "true", data_bv_notempty_message = "Pincode is required and cannot be empty", required = "required", @onchange = "GetCityArea()" } })

                                    </div>

                                    <div class="col-md-4 col-12 mb-3">
                                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", Autocomplete = "off", data_bv_notempty = "true", data_bv_notempty_message = "State is required and cannot be empty" } })
                                    </div>

                                    <div class="col-md-4 col-12 mb-3">
                                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", Autocomplete = "off", data_bv_notempty = "true", data_bv_notempty_message = "City is required and cannot be empty" } })
                                    </div>


                                </div>
                                <div class="row">

                                    <div class="col-md-4 col-12 mb-3">
                                        @Html.LabelFor(model => model.Area, htmlAttributes: new { })
                                        @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control", Autocomplete = "off", data_bv_notempty = "true", data_bv_notempty_message = "Area is required and cannot be empty" } })

                                    </div>

                                    <div class="col-12 mb-3">
                                        <label>IsActive</label><br>
                                        <label class="switch">
                                            <input type="checkbox" checked id="IsActive">
                                            <span class="slider round"></span>
                                        </label>

                                    </div>
                                </div>
                            </div>


                            <div class="col-md-8">
                                <input type="submit" id="AddNew" value="Create" class="btn btn-primary" onclick="CheckVal(event);" />&nbsp;&nbsp;
                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                            </div>
                        }
                       
                    </div>

                        @section Scripts {
                            @Scripts.Render("~/bundles/jqueryval")
                        }
                    </div>
                </div>
            </div>
        </div>
</section>
<script>
     $(document).ready(function () {

        $("#form0").bootstrapValidator();

        var tEMP = '@TempData["success"]';
        if (tEMP != "" && tEMP != undefined && tEMP != null) {
            swal("Success!", tEMP, "success");
        }
        var tEMP = '@TempData["error"]';
        if (tEMP != "" && tEMP != undefined && tEMP != null) {
            swal("Error!", tEMP, "error");
        }

     });

</script>
