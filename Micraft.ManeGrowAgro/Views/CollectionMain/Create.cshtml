
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    #tbl11 .form-control {
        width: 70px;
        padding: 0;
    }

    .wrapper {
        overflow-x: auto;
    }

        .wrapper table {
            white-space: nowrap;
        }
</style>

<!-- /.content-header -->
<!-- Main content -->
<br />
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">

                        @using (Html.BeginForm(null, null, FormMethod.Post, new
                        {
                            @id = "form0",
                            onSubmit = "return false"
                        }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <div class="content-header" style="padding:1px">
                                    <h4>Payment Collection</h4>
                                </div>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="modal-body">

                                    <input type="hidden" id="ID" name="ID" />
                                    @*<input type="hidden" id="Mainid" name="Mainid" />*@

                                    <input type="hidden" id="Count" value="1000" />

                                    <div class="row">

                                        <div class="col-md-2 col-12">
                                            <lable>Select Customer</lable>
                                        </div>
                                        <div class="col-md-2 col-12">
                                            @Html.DropDownList("CustID", new SelectList(ViewBag.CustID, "ID", "CustName"), "Select", new { @class = "form-control", style = "min-width:100px", onchange = "GetInvoiceDetails()" })
                                        </div>

                                        <div class="col-md-2 col-12">
                                            <lable>Enter Date</lable>
                                        </div>
                                        <div class="col-md-2 col-12">
                                            <input type="text" class="form-control" id="mydate">
                                        </div>
                                    </div>
                                    <br/>
                                        <div class="row">

                                            <div class="col-md-2 col-12">
                                                <lable>Transaction No</lable>
                                            </div>
                                            <div class="col-md-2 col-12">
                                                <input type="number" class="form-control" id="TransactionID" placeholder="">
                                            </div>
                                            <div class="col-md-2 col-12">
                                                <lable>Transaction Date</lable>
                                            </div>
                                            <div class="col-md-2 col-12">
                                                <input type="text" class="form-control" id="TransactionDate">
                                            </div>
                                        </div>
                                        <br />
                                        <div class="row">
                                            <div class="col-md-2 col-12">
                                                <lable>Payment Mode</lable>
                                            </div>
                                            <div class="col-md-2 col-12">
                                                <select name="Mode" id="PaymentMode" class="form-control">
                                                    <option value="CASH">CASH</option>
                                                    <option value="RTGS">RTGS</option>
                                                    <option value="IMPS">IMPS</option>
                                                    <option value="UPI">UPI</option>
                                                    <option value="CHEQUE">CHEQUE</option>

                                                </select>
                                            </div>
                                            <div class="col-md-2 col-12">
                                                <lable>Amount</lable>
                                            </div>
                                            <div class="col-md-2 col-12">
                                                <input type="number" class="form-control" id="PayAmount" placeholder="">
                                            </div>
                                        </div>
                                        <br />
                                        <div class="row">

                                            <div class="col-md-2 col-12">
                                                <lable>Payment Details</lable>
                                            </div>
                                            <div class="col-md-8 col-12">
                                                <input type="text" class="form-control" id="PaymentDetails" placeholder="">
                                            </div>

                                        </div>

                                        <hr />
                                        <div class="row">
                                            <div style="overflow-x:auto;">

                                            </div>
                                            <div class="col-md-12">
                                                <div class="table-responsive">
                                                    <table id="example" class="table table-striped table-bordered dt-responsive" style="width:100%;">
                                                        <thead>
                                                            <tr class="text-uppercase">
                                                                <th>Inv.No</th>
                                                                <th>Inv.Date</th>
                                                                <th>Inv.Amount</th>
                                                                <th>Old Receipt</th>
                                                                <th>Receivable</th>
                                                                <th>Recd Amount</th>
                                                                <th>Adjust Amount</th>

                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                        </tbody>

                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-2 col-12">

                                            </div>
                                            <div class="col-md-2 col-12">

                                            </div>
                                            <div class="col-md-2 col-12">

                                            </div>
                                            <div class="col-md-2 col-12">
                                                <label id="lbltot" class="mb-lg-n5"></label>
                                            </div>
                                        </div>

                                        <button type="button" class="btn btn-success" id="Savebtn" onclick="Save()"> Save </button>
                                        <button type="button" class="btn btn-primary" onclick="backToList()"> Back to List </button>
                                        <br />


                                    </div>
                            </div>
                         }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
<link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />
<script src="~/Scripts/jquery.preloaders.js"></script>

<script>

    $(document).ready(function () {
        try {
            $('#mydate').datepicker({
                dateFormat: 'dd/mm/yy',
                autoclose: true,
                onSelect: function () {

                }
            });
            $('#mydate').val('@DateTime.Now.ToString("dd/MM/yyyy")');

            $('#TransactionDate').datepicker({
                dateFormat: 'dd/mm/yy',
                autoclose: true,
                onSelect: function () {

                }
            });
           


            var url = window.location.href;
            var part = url.substring(url.lastIndexOf('/') + 1);
            if (part != "ghgfdcsssd") {
                $('#ID').val(part);

               // alert(part.ID)

                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetEditData", "CollectionMain")',
                    data: { ID: part },
                    dataType: "json",
                    success: function (result) {
                        if (result.Message == "success") {
                            var dnd = true;
                            var Count = 1;

                            debugger;

                            $('#CustID').val(result.data[0].CustID);
                            $("#CustID").prop('disabled', true);

                            var date = new Date(parseInt(result.data[0].PaymentDate.substr(6)));
                            var PaymentDate = $.datepicker.formatDate("dd/mm/yy", date);

                            // alert(PaymentDate)
                            $('#mydate').val(PaymentDate);
                            $('#TransactionDate').val(TransactionDate);
                            $('#PaymentMode').val(result.data[0].PaymentMode);
                            $('#PayAmount').val(result.data[0].PayAmount);
                            $('#PaymentDetails').val(result.data[0].PaymentDetails);
                            $('#TransactionID').val(result.data[0].TransactionID);
                            $('#TransactionDate').val(result.data[0].TransactionDate);


                            $.each(result.data, function (i, item) {

                                $("#example").append("<tr> <td><label id='InvoiceNo" + Count + "' ></label></td> <td><label id='InvoiceDate" + Count + "' ></label></td> <td><label id='Amount" + Count + "' ></label></td> <td><label id='OldReceiptAmount" + Count + "' ></label></td><td><label id='ReceivableAmount" + Count + "' ></label></td> <td><input type='number' id='RecdAmount" + Count + "' onchange='checkval(" + Count + ")'  ></input</td> <td><input type='number' id='AdjustAmount" + Count + "' ></label></td> <td style='display:none;'><label id='ID" + Count + "' ></label></td>  <td style='display:none;'><label id='Mainid" + Count + "' ></label></td></tr>");

                                var date = new Date(parseInt(item.InvoiceDate.substr(6)));
                                var InvoiceDate = $.datepicker.formatDate("dd/mm/yy", date);
                                //  $('#ID' + Count).text(item.ID);
                                $('#InvoiceNo' + Count).text(item.InvoiceNo);
                                $('#InvoiceDate' + Count).text(InvoiceDate);
                                $('#Amount' + Count).text(item.Amount);

                                //var oldamt = item.OldReceiptAmount;
                                //if (oldamt = null ? 0 : oldamt);
                                //var recievable = item.Amount - oldamt;

                               // $('#OldReceiptAmount' + Count).text(oldamt);
                                //$('#ReceivableAmount' + Count).text(recievable);
                                $('#OldReceiptAmount' + Count).text(item.OldReceiptAmount);
                                $('#ReceivableAmount' + Count).text(item.ReceivableAmount);
                                $('#RecdAmount' + Count).val(item.RecdAmount);
                                $('#AdjustAmount' + Count).val(item.AdjustAmount);
                                $("#ID" + Count).text(item.ID);
                                $("#Mainid" + Count).text(item.CustomerId);


                                Count++;
                                CalculateTotal();
                            });
                            rowCount = Count;
                        }
                        $.preloader.stop();
                    },
                });
            }
        }
        catch (e) {
        }
    });

    function backToList() {
        window.location.href = '/CollectionMain/Index'
    }

    //$('#mydate').on('change', function () {
    //    if ($('#CustID').val() != null) {
    //        if ($('#CustID').val() != "") {

    //        }
    //    }
    //});

    var rowCount = 0;
    function GetInvoiceDetails() {

        //$.preloader.start({
        //    modal: true,
        //    src: 'sprites2.png'
        //});
        $('#example tbody').empty();

        $.ajax({
                type: "GET",
                url: '@Url.Action("GetInvoiceDetails", "CollectionMain")',
                data: {  CustomerID: $('#CustID').val() },
                dataType: "json",
                success: function (result) {
                      if (result.Message == "success") {
                         var dnd = true;
                          var Count = 1;

                         $.each(result.orders, function (i, item) {

                             $("#example").append("<tr> <td><label id='InvoiceNo" + Count + "' ></label></td> <td><label id='InvoiceDate" + Count + "' ></label></td> <td><label id='Amount" + Count + "' ></label></td> <td><label id='OldReceiptAmount" + Count + "' ></label></td><td><label id='ReceivableAmount" + Count + "' ></label></td> <td><input type='number' id='RecdAmount" + Count + "' onchange='checkval(" + Count + ")'  ></input</td> <td><input type='number' id='AdjustAmount" + Count + "' ></label></td> <td style='display:none;'><label id='Mainid" + Count + "' ></label></td> </tr>");
                             try {

                                 var date = new Date(parseInt(item.InvoiceDate.substr(6)));
                                 var InvoiceDate = $.datepicker.formatDate("dd/mm/yy", date);
                                 //  $('#ID' + Count).text(item.ID);

                                 $('#InvoiceDate' + Count).text(InvoiceDate);


                             } catch {}

                             debugger;
                             $('#InvoiceNo' + Count).text(item.InvoiceNo);
                             $('#Amount' + Count).text(item.FinalAmount);
                             var oldamt = item.OldReceiptAmount;
                             if (oldamt = null ? 0: oldamt);
                             var recievable = item.FinalAmount - oldamt;

                             if (oldamt == null){
                                 oldamt = 0;
                             }


                             if (recievable == 0) {
                                 $("#RecdAmount").prop('disabled', true);
                                 $("#AdjustAmount").prop('disabled', true);
                             } else {
                                 $("#RecdAmount").prop('disabled', false);
                                 $("#AdjustAmount").prop('disabled', false);
                             }

                             $('#OldReceiptAmount' + Count).text(oldamt);
                             $('#ReceivableAmount' + Count).text(recievable)
                             $('#RecdAmount' + Count).val(item.RecdAmount);
                             $('#AdjustAmount' + Count).val(item.AdjustAmount);
                             $("#Mainid" + Count).text(item.Id);
                            // $("#Mainid" + Count).text(item.CustomerID);
                           //  alert(item.Id)
                             Count++;

                            CalculateTotal();

                         });
                         rowCount = Count;
                      }
                         $.preloader.stop();
                },
        });
    }


    function Save() {
        var temp = true;

        if ($('#example TBODY tr').length == 0) {
            //...do something here
            toastr.error("Please add Some records.");
            temp = false;
        }

        if (parseFloat($("#lbltot").text()) != parseFloat($("#PayAmount").val())) {
            temp = false;
            toastr.error("List Total Amount And Pay Amount Missmatch....");
        }

            if ($('#PaymentMode').val() == null || $('#PaymentMode').val() == "") {
                toastr.error("PaymentMode  is Required.");
                temp = false;
            }

        if ($('#PayAmount').val() == null || $('#PayAmount').val() == "") {
            toastr.error("Pay Amount  is Required.");
            temp = false;
        }

        if ($('#PaymentDetails').val() == null || $('#PaymentDetails').val() == "") {
            toastr.error("Payment Details  is Required.");
            temp = false;
        }
        if ($('#TransactionID').val() == null || $('#TransactionID').val() == "") {
            toastr.error("Transaction ID  is Required.");
            temp = false;
        }
        if ($('#TransactionDate').val() == null || $('#TransactionDate').val() == "") {
            toastr.error("Transaction Date  is Required.");
            temp = false;
        }
            if (temp == true) {
                //$.preloader.start({
                //    modal: true,
                //    src: 'sprites2.png'
                //});
                debugger;
                var recs = new Array();
                $("#example TBODY TR").each(function () {
                    var row = $(this);
                    var Order = {};
                    // Order.CollectionID = row.find("TD").eq(0).text();
                    Order.InvoiceNo = row.find("TD").eq(0).text();
                    Order.InvoiceDate = row.find("TD").eq(1).text();
                    Order.Amount = row.find("TD").eq(2).text();
                    Order.OldReceiptAmount = parseFloat(row.find("TD:eq(5) input[type='number']").val());
                    Order.ReceivableAmount = row.find("TD").eq(4).text();

                    //debugger;

                    //var oldamt = Order.OldReceiptAmount;
                    //if (oldamt = null ? 0 : oldamt);
                    //var recievable = item.Amount - oldamt;


                    Order.AdjustAmount = row.find("TD:eq(6) input[type='number']").val();
                    Order.Mainid = row.find("TD").eq(7).text();

                    recs.push(Order);

                });

                //var list = [];

                //$('#example TBODY TR').each(function (index, e) {
                //    try {

                //        var collection = {
                //            CustID: $('#CustID' + Count).val(),
                //            PaymentDate: $('#mydate' + Count).val(),
                //            PaymentMode: $('#PaymentMode' + Count).val(),
                //            PayAmount: $('#PayAmount' + Count).val(),
                //            PaymentDetails: $('#PaymentDetails' + Count).val(),

                //        }
                //            temp = true;
                //            list.push(collection);

                //    } catch (e) {

                //    }
                //})

                debugger;

                var collectionID = null;
                var url = window.location.href;
                var part = url.substring(url.lastIndexOf('/') + 1);
                if (part != "ghgfdcsssd") {
                    collectionID = part;

                }
                debugger;
                var data = {
                    /* Cust: list,*/
                    recs: recs, DATE: $('#mydate').val(), CustomerID: $('#CustID').val(), PaymentMode: $("#PaymentMode option:selected").text(), Amount: $('#PayAmount').val(), PaymentDetails: $('#PaymentDetails').val(), TransactionID: $('#TransactionID').val(), TransactionDate: $('#TransactionDate').val(), CollectionID:collectionID
                }
                debugger;
                //Send the JSON array to Controller using AJAX.
                $.ajax({
                    type: "POST",
                    url: "/CollectionMain/Save",
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.Message == "success") {
                            $('#form0').each(function () {
                                this.reset();
                            });

                            $('#InvoiceNo').html('');
                            $('#InvoiceDate').html('');
                            $('#Amount').html('');
                            $('#OldReceiptAmount').html('');
                            $('#ReceivableAmount').html('');
                            $('#RecdAmount').val('');
                            $('#AdjustAmount').val('');
                            $('#Mainid').html('');

                            $('#mydate').html('');
                            $('#CustID').html('');
                            $('#PaymentMode').val('');
                            $('#PayAmount').val('');
                            $('#PaymentDetails').val('');
                            $('#TransactionID').val('');
                            $('#TransactionDate').val('');


                            toastr.success("Records Saved Succesfully  " + result.Max + ".");
                            window.location.href = "/CollectionMain/Index";
                              GetEditData(result.Max);
                        }
                        else {
                            toastr.error(result.Message);
                            $.preloader.stop();
                        }
                        $.preloader.stop();
                    }
                });
            }
    }

    function checkval(id) {
        // $("#example").empty();
        if (parseInt($('#RecdAmount' + id + '').val()) <= parseInt($('#ReceivableAmount' + id + '').text())) {
            //alert("valid");
            $("#savebtn").attr('disabled', true);
        }
        else {
            toastr.error("Received Amount Should Not Be Greather Than Recievable Amount.");
            $("#savebtn").attr('disabled', true);
            //alert("invalid");
        }
        CalculateTotal();
      // totalcalculator(id);

    }


    function CalculateTotal() {
       // alert();
        var totamt = 0;
       // var totalold = 0;
      //  try {
            $("#example TBODY TR").each(function () {
                debugger
                var row = $(this);
                var total = parseFloat(row.find("TD:eq(5) input[type='number']").val());

                totamt = totamt + parseFloat(total);

            });

            $('#lbltot').text(totamt);

       // } catch { }

    }

    function totalcalculator(id) {
        debugger;
        $("#OldReceiptAmount" + id).text(parseFloat($("#OldReceiptAmount" + id).text()) + parseFloat($("#RecdAmount" + id).val()));

    }

    //function saveandtotal() {
    //    totalcalculator(id);
    //    Save();
    //}

   // function CheckDuplicate() {
   //     debugger;
   //     var OrderNo = $("#OrderNo").val();
   //     $.ajax({
   //         url: '@*@Url.Action("CheckDuplicate", "CollectionMain")',*@
   //         type: "GET",
   //         dataType: "JSON",
   //         data: { OrderNo: OrderNo, Mode: "Create", ID: 0 },
   //         success: function (result) {
   //             try {
   //                 if (result == "1") {
   //                     $("#OrderNo").val("");
   //                     $("#form0").bootstrapValidator('revalidateField', 'OrderNo');
   //                     toastr.error("OrderNo already exist");
   //                 }
   //                 else if (result == "0") {
   //                      }
   //                 else {
   //                     toastr.error(result);
   //                      }
   //             }
   //             catch (e) {
   //             }
   //         }
   //     });
    //}


</script>